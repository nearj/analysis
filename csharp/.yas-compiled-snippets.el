;;; Compiled snippets and support files for `csharp'
;;; Snippet definitions:
;;;
(yas-define-snippets 'csharp
                     '(("PlayMenu.cs" "using MotionDevice.RollerCoaster;\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing UnityEngine;\nusing debug = UnityEngine.Debug;\n\npublic class PlayMenu : MonoBehaviour\n{\n\n    Dictionary<KeyCode, Action> keyDictionary;\n\n    private PlayManager pm;\n    private Transform tr;\n\n    private bool flag_pitch = true;\n    private bool flag_yaw = true;\n    private bool flag_roll = true;\n    private bool flag_surge = true;\n    private bool flag_heave = true;\n    private bool flag_sway = true;\n    private bool flag_pitch2 = true;\n    private bool flag_yaw2 = true;\n    private bool flag_roll2 = true;\n    private bool flag_heave2 = true;\n    private bool constant = true;\n    private bool flag_S5 = false;\n\n    private float accel_pitch = 0.0f, accel_yaw = 0.0f, accel_roll = 0.0f, accel_surge = 0.0f, accel_heave = 0.0f, accel_sway = 0.0f;\n\n    float timer, fps;\n    Stopwatch sw = new Stopwatch();\n    public int idx = 0;\n\n    void FlagInit()\n    {\n        flag_pitch = true;\n        flag_yaw = true;\n        flag_roll = true;\n        flag_surge = true;\n        flag_heave = true;\n        flag_sway = true;\n        flag_pitch2 = true;\n        flag_yaw2 = true;\n        flag_roll2 = true;\n        flag_heave2 = true;\n        constant = true;\n        flag_S5 = false;\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        pm = GameObject.Find(\"PlayManager\").GetComponent<PlayManager>();\n        tr = GameObject.Find(\"PlayManager\").GetComponent<Transform>();\n    }\n\n    // Update is called once per frame\n    // todo: dictionary.\n    void Update()\n    {\n\n        PushButton();\n        Timer();\n        switch (idx)\n        {\n            case 1:\n                S1_Pitch();\n                break;\n            case 2:\n                S1_Yaw();\n                break;\n            case 3:\n                S1_Roll();\n                break;\n            case 4:\n                S1_Surge();\n                break;\n            case 5:\n                S1_Heave();\n                break;\n            case 6:\n                S1_Sway();\n                break;\n            case 11:\n                S2_Pitch();\n                break;\n            case 12:\n                S2_Yaw();\n                break;\n            case 13:\n                S2_Roll();\n                break;\n            case 14:\n                S2_Surge();\n                break;\n            case 15:\n                S2_Heave();\n                break;\n            case 16:\n                S2_Sway();\n                break;\n            case 21:\n                S3_Pitch();\n                break;\n            case 22:\n                S3_Yaw();\n                break;\n            case 23:\n                S3_Roll();\n                break;\n            case 24:\n                S3_Surge();\n                break;\n            case 25:\n                S3_Heave();\n                break;\n            case 26:\n                S3_Sway();\n                break;\n            case 31:\n                S4();\n                break;\n            case 32:\n                S5();\n                break;\n            case 33:\n                S6();\n                break;\n            case 99:\n                Cycle1();\n                break;\n            case 100:\n                Refresh();\n                break;\n        }\n    }\n\n    void PushButton()\n    {\n        if (Input.GetKeyDown(KeyCode.Keypad0))\n        {\n            FlagInit();\n            idx = 0;\n        }\n        else if (Input.GetKeyDown(KeyCode.R))\n        {\n            FlagInit();\n            idx = 100;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha1))\n        {\n            FlagInit();\n            idx = 1;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha2))\n        {\n            FlagInit();\n            idx = 2;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha3))\n        {\n            FlagInit();\n            idx = 3;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha4))\n        {\n            FlagInit();\n            idx = 4;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha5))\n        {\n            FlagInit();\n            idx = 5;\n        }\n        else if (Input.GetKeyDown(KeyCode.Alpha6))\n        {\n            FlagInit();\n            idx = 6;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha1))\n        {\n            FlagInit();\n            idx = 11;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha2))\n        {\n            FlagInit();\n            idx = 12;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha3))\n        {\n            FlagInit();\n            idx = 13;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha4))\n        {\n            FlagInit();\n            idx = 14;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha5))\n        {\n            FlagInit();\n            idx = 15;\n        }\n        else if (Input.GetKey(KeyCode.LeftShift) && Input.GetKeyDown(KeyCode.Alpha6))\n        {\n            FlagInit();\n            idx = 16;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha1))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 21;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha2))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 22;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha3))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 23;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha4))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 24;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha5))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 25;\n        }\n        else if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.Alpha6))\n        {\n            FlagInit();\n            pm.timer = 0.0f;\n            idx = 26;\n        }\n        else if (Input.GetKey(KeyCode.LeftAlt) && Input.GetKeyDown(KeyCode.Alpha1))\n        {\n            FlagInit();\n            idx = 31;\n        }\n        else if (Input.GetKey(KeyCode.LeftAlt) && Input.GetKeyDown(KeyCode.Alpha2))\n        {\n            FlagInit();\n            idx = 32;\n        }\n        else if (Input.GetKey(KeyCode.LeftAlt) && Input.GetKeyDown(KeyCode.Alpha3))\n        {\n            FlagInit();\n            flag_yaw = false;\n            flag_roll = false;\n            idx = 33;\n        }\n        else if (Input.GetKeyDown(KeyCode.F12))\n        {\n            debug.Log(\"Stop Time : \" + sw.ElapsedMilliseconds.ToString() + \" ms\");\n        }\n        else if (Input.GetKeyDown(KeyCode.G))\n        {\n            FlagInit();\n            pm.timer = 120.0f;\n            idx = 99;\n        }\n    }\n\n    float norm(float x)\n    {\n        if (x >= 330 && x < 360)\n            x = 360 - x;\n        else if (x > 0 && x <= 30)\n            x = -x;\n\n        return x;\n    }\n    void Pitch(MonoBehaviour m)\n    {\n\n    }\n    void S1_Pitch()\n    {\n        if ((-pm.rotNow.x) < 30 && flag_pitch == true)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x - 1.0f, 0.2f);\n        else if ((-pm.rotNow.x) >= 30 && flag_pitch == true) flag_pitch = false;\n        else if ((-pm.rotNow.x) > -30 && flag_pitch == false)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x + 1.0f, 0.2f);\n        else if ((-pm.rotNow.x) <= -30 && flag_pitch == false) flag_pitch = true;\n    }\n\n    void S1_Yaw()\n    {\n        if (flag_S5 == false)\n        {\n            if (pm.rotNow.y < 120 && flag_yaw == true)\n                pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y + 2.0f, 0.2f);\n            else if (pm.rotNow.y >= 120 && flag_yaw == true) flag_yaw = false;\n            else if (pm.rotNow.y > -120 && flag_yaw == false)\n                pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y - 2.0f, 0.2f);\n            else if (pm.rotNow.y <= -120 && flag_yaw == false) flag_yaw = true;\n        }\n\n        else if (flag_S5 == true)\n        {\n            if ((pm.rotNow.y) <= 36 && flag_yaw == true)\n                pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y + 1.0f, 0.24f);\n            else if (pm.rotNow.y > 36 && flag_yaw == true) flag_yaw = false;\n            else if (pm.rotNow.y >= -36 && flag_yaw == false)\n                pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y - 1.0f, 0.24f);\n            else if (pm.rotNow.y < -36 && flag_yaw == false) flag_yaw = true;\n        }\n\n    }\n\n    void S1_Roll()\n    {\n        if ((-pm.rotNow.z) <= 14 && flag_roll == true)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z - 1.0f, 0.1f);\n        else if ((-pm.rotNow.z) > 14 && flag_roll == true) flag_roll = false;\n        else if ((-pm.rotNow.z) >= -14 && flag_roll == false)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z + 1.0f, 0.1f);\n        else if ((-pm.rotNow.z) < -14 && flag_roll == false) flag_roll = true;\n    }\n\n    void S1_Surge()\n    {\n        if (flag_surge == true && pm.transform.position.x <= 1150.0f)\n        {\n            if (pm.forward_speed >= -0.32f && constant == true) pm.forward_speed = -0.32f;\n            else if (pm.forward_speed > -0.75f && constant == false) pm.forward_speed -= 0.002f;\n            else if (pm.forward_speed <= -0.75f && constant == false) flag_surge = false;\n        }\n        else if (flag_surge == true && pm.transform.position.x > 1150.0f) flag_surge = false;\n        else if (flag_surge == false && pm.transform.position.x >= 880.0f)\n        {\n            if (pm.forward_speed <= 0.32f && constant == true) pm.forward_speed = 0.32f;\n            else if (pm.forward_speed < 0.75f && constant == false) pm.forward_speed += 0.002f;\n            else if (pm.forward_speed >= 0.75f && constant == false) flag_surge = true;\n        }\n        else if (flag_surge == false && pm.transform.position.x < 880.0f) flag_surge = true;\n    }\n\n    void S1_Heave()\n    {\n        if (pm.posNow.y <= 0.900 && flag_heave == true)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y + 2.0f, 0.004f);\n        else if (pm.posNow.y > 0.900 && flag_heave == true) flag_heave = false;\n        else if (pm.posNow.y >= -0.900 && flag_heave == false)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y - 2.0f, 0.004f);\n        else if (pm.posNow.y < -0.900 && flag_heave == false) flag_heave = true;\n    }\n\n    void S1_Sway()\n    {\n        if (flag_sway == true && pm.transform.position.z <= 1110.0f)\n        {\n            if (pm.sway_speed > -0.24f && constant == true) pm.sway_speed = -0.24f;\n            else if (pm.sway_speed > -0.48f && constant == false) pm.sway_speed -= 0.002f;\n            else if (pm.sway_speed <= -0.48f && constant == false) flag_sway = false;\n        }\n        else if (flag_sway == true && pm.transform.position.z > 1110.0f) flag_sway = false;\n        else if (flag_sway == false && pm.transform.position.z >= 970.0f)\n        {\n            if (pm.sway_speed < 0.24f && constant == true) pm.sway_speed = 0.24f;\n            else if (pm.sway_speed < 0.48f && constant == false) pm.sway_speed += 0.002f;\n            else if (pm.sway_speed >= 0.48f && constant == false) flag_sway = true;\n        }\n        else if (flag_sway == false && pm.transform.position.z < 970.0f) flag_sway = true;\n    }\n\n    void S2_Pitch()\n    {\n        if ((-pm.rotNow.x) <= 29 && flag_pitch == true)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x - accel_pitch, 1.0f);\n        else if ((-pm.rotNow.x) > 29 && flag_pitch == true) flag_pitch = false;\n        else if ((-pm.rotNow.x) >= -29 && flag_pitch == false)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x + accel_pitch, 1.0f);\n        else if ((-pm.rotNow.x) < -29 && flag_pitch == false) flag_pitch = true;\n\n        if (flag_pitch2 == true)\n        {\n            accel_pitch += 0.002f;\n            if (accel_pitch >= 0.72f) flag_pitch2 = false;\n        }\n        else\n        {\n            accel_pitch -= 0.002f;\n            if (accel_pitch <= 0.0f) flag_pitch2 = true;\n        }\n    }\n\n    void S2_Yaw()\n    {\n        if ((pm.rotNow.y) <= 120 && flag_yaw == true)\n            pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y + accel_yaw, 1.0f);\n        else if (pm.rotNow.y > 120 && flag_yaw == true) flag_yaw = false;\n        else if (pm.rotNow.y >= -120 && flag_yaw == false)\n            pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y - accel_yaw, 1.0f);\n        else if (pm.rotNow.y < -120 && flag_yaw == false) flag_yaw = true;\n\n        if (flag_yaw2 == true)\n        {\n            accel_yaw += 0.0013f;\n            if (accel_yaw >= 0.78f) flag_yaw2 = false;\n        }\n        else\n        {\n            accel_yaw -= 0.0013f;\n            if (accel_yaw <= 0.001f) flag_yaw2 = true;\n        }\n    }\n\n    void S2_Roll()\n    {\n        if ((-pm.rotNow.z) <= 14 && flag_roll == true)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z - accel_roll, 1.0f);\n        else if ((-pm.rotNow.z) > 14 && flag_roll == true) flag_roll = false;\n        else if ((-pm.rotNow.z) >= -14 && flag_roll == false)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z + accel_roll, 1.0f);\n        else if ((-pm.rotNow.z) < -14 && flag_roll == false) flag_roll = true;\n\n        if (flag_roll2 == true)\n        {\n            accel_roll += 0.001f;\n            if (accel_roll >= 0.3f) flag_roll2 = false;\n        }\n        else\n        {\n            accel_roll -= 0.001f;\n            if (accel_roll <= 0.01f) flag_roll2 = true;\n        }\n    }\n\n    void S2_Surge()\n    {\n        constant = false;\n        S1_Surge();\n    }\n\n    void S2_Heave()\n    {\n        if (pm.posNow.y <= 0.900 && flag_heave == true)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y + accel_heave, 1.0f);\n        else if (pm.posNow.y > 0.900 && flag_heave == true) flag_heave = false;\n        else if (pm.posNow.y >= -0.900 && flag_heave == false)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y - accel_heave, 1.0f);\n        else if (pm.posNow.y < -0.900 && flag_heave == false) flag_heave = true;\n\n        if (flag_heave2 == true)\n        {\n            accel_heave += 0.00006f;\n            if (accel_heave >= 0.018f) flag_heave2 = false;\n        }\n        else\n        {\n            accel_heave -= 0.0001f;\n            if (accel_heave <= 0.0001f) flag_heave2 = true;\n        }\n    }\n\n    void S2_Sway()\n    {\n        constant = false;\n        S1_Sway();\n    }\n\n    void S3_Pitch()\n    {\n        if ((-pm.rotNow.x) < 30 && flag_pitch == true)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x - 0.2f - accel_pitch, 1.0f);\n        else if ((-pm.rotNow.x) >= 30 && flag_pitch == true) flag_pitch = false;\n        else if ((-pm.rotNow.x) > -30 && flag_pitch == false)\n            pm.rotNow.x = Mathf.Lerp(pm.rotNow.x, pm.rotNow.x + 0.2f + accel_pitch, 1.0f);\n        else if ((-pm.rotNow.x) <= -30 && flag_pitch == false) flag_pitch = true;\n\n        if (pm.timer >= 5.0f && pm.timer <= 14.0f)\n        {\n            if (flag_pitch2 == true)\n            {\n                accel_pitch += 0.002f;\n                if (accel_pitch >= 0.48f) flag_pitch2 = false;\n            }\n            else\n            {\n                accel_pitch -= 0.002f;\n                if (accel_pitch <= 0.0f) flag_pitch2 = true;\n            }\n        }\n        else accel_pitch = 0.0f;\n    }\n\n    void S3_Yaw()\n    {\n        if ((pm.rotNow.y) <= 120 && flag_yaw == true)\n            pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y + 0.4f + accel_yaw, 1.0f);\n        else if (pm.rotNow.y > 120 && flag_yaw == true) flag_yaw = false;\n        else if (pm.rotNow.y >= -120 && flag_yaw == false)\n            pm.rotNow.y = Mathf.Lerp(pm.rotNow.y, pm.rotNow.y - 0.4f - accel_yaw, 1.0f);\n        else if (pm.rotNow.y < -120 && flag_yaw == false) flag_yaw = true;\n\n        if (pm.timer >= 5.0f && pm.timer <= 14.0f)\n        {\n            if (flag_yaw2 == true)\n            {\n                accel_yaw += 0.0015f;\n                if (accel_yaw >= 0.36f) flag_yaw2 = false;\n            }\n            else\n            {\n                accel_yaw -= 0.0015f;\n                if (accel_yaw <= 0.0f) flag_yaw2 = true;\n            }\n        }\n        else accel_yaw = 0.0f;\n    }\n\n    void S3_Roll()\n    {\n        if ((-pm.rotNow.z) <= 14 && flag_roll == true)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z - 0.1f - accel_roll, 1.0f);\n        else if ((-pm.rotNow.z) > 14 && flag_roll == true) flag_roll = false;\n        else if ((-pm.rotNow.z) >= -14 && flag_roll == false)\n            pm.rotNow.z = Mathf.Lerp(pm.rotNow.z, pm.rotNow.z + 0.1f + accel_roll, 1.0f);\n        else if ((-pm.rotNow.z) < -14 && flag_roll == false) flag_roll = true;\n\n        if (pm.timer >= 5.0f && pm.timer <= 14.0f)\n        {\n            if (flag_roll2 == true)\n            {\n                accel_roll += 0.0005f;\n                if (accel_roll >= 0.12f) flag_roll2 = false;\n            }\n            else\n            {\n                accel_roll -= 0.005f;\n                if (accel_roll <= 0.00f) flag_roll2 = true;\n            }\n        }\n        else accel_roll = 0.0f;\n    }\n\n    void S3_Surge()\n    {\n        if (pm.timer >= 0.0f && pm.timer <= 10.0f)\n            constant = false;\n        else constant = true;\n        if (flag_surge == true && pm.transform.position.x <= 1150.0f)\n        {\n            if (pm.forward_speed >= -0.32f && constant == true) pm.forward_speed = -0.32f;\n            else if (pm.forward_speed > -0.75f && constant == false) pm.forward_speed -= 0.006f;\n            else if (pm.forward_speed <= -0.75f && constant == false) flag_surge = false;\n        }\n        else if (flag_surge == true && pm.transform.position.x > 1150.0f) flag_surge = false;\n        else if (flag_surge == false && pm.transform.position.x >= 880.0f)\n        {\n            if (pm.forward_speed <= 0.32f && constant == true) pm.forward_speed = 0.32f;\n            else if (pm.forward_speed < 0.75f && constant == false) pm.forward_speed += 0.006f;\n            else if (pm.forward_speed >= 0.75f && constant == false) flag_surge = true;\n        }\n        else if (flag_surge == false && pm.transform.position.x < 880.0f) flag_surge = true;\n    }\n\n    void S3_Heave()\n    {\n        if (pm.posNow.y < 1.0f && flag_heave == true)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y + 0.008f + accel_heave, 1.0f);\n        else if (pm.posNow.y >= 1.0f && flag_heave == true) flag_heave = false;\n        else if (pm.posNow.y > -1.0f && flag_heave == false)\n            pm.posNow.y = Mathf.Lerp(pm.posNow.y, pm.posNow.y - 0.008f - accel_heave, 1.0f);\n        else if (pm.posNow.y <= -1.0f && flag_heave == false) flag_heave = true;\n\n        if (pm.timer >= 0.0f && pm.timer <= 10.0f)\n        {\n            if (flag_heave2 == true)\n            {\n                accel_heave += 0.00006f;\n                if (accel_heave >= 0.018f) flag_heave2 = false;\n            }\n            else\n            {\n                accel_heave -= 0.0001f;\n                if (accel_heave <= 0.0001f) flag_heave2 = true;\n            }\n        }\n        else accel_heave = 0.0f;\n    }\n\n    void S3_Sway()\n    {\n        if (pm.timer >= 0.0f && pm.timer <= 10.0f)\n            constant = false;\n        else constant = true;\n        if (flag_sway == true && pm.transform.position.z <= 1110.0f)\n        {\n            if (pm.sway_speed > -0.24f && constant == true) pm.sway_speed = -0.24f;\n            else if (pm.sway_speed > -0.48f && constant == false) pm.sway_speed -= 0.002f;\n            else if (pm.sway_speed <= -0.48f && constant == false) flag_sway = false;\n        }\n        else if (flag_sway == true && pm.transform.position.z > 1110.0f) flag_sway = false;\n        else if (flag_sway == false && pm.transform.position.z >= 970.0f)\n        {\n            if (pm.sway_speed < 0.24f && constant == true) pm.sway_speed = 0.24f;\n            else if (pm.sway_speed < 0.48f && constant == false) pm.sway_speed += 0.002f;\n            else if (pm.sway_speed >= 0.48f && constant == false) flag_sway = true;\n        }\n        else if (flag_sway == false && pm.transform.position.z < 970.0f) flag_sway = true;\n    }\n\n\n    void S4()\n    {\n        S1_Pitch();\n        if (flag_surge == true && pm.transform.position.x <= 1200.0f)\n        {\n            if (pm.forward_speed >= -0.3f) pm.forward_speed = -0.3f;\n        }\n        else if (flag_surge == true && pm.transform.position.x > 1200.0f) flag_surge = false;\n        else if (flag_surge == false && pm.transform.position.x >= 880.0f)\n        {\n            if (pm.forward_speed <= 0.3f) pm.forward_speed = 0.3f;\n        }\n        else if (flag_surge == false && pm.transform.position.x < 880.0f) flag_surge = true;\n    }\n\n    void S5()\n    {\n        flag_S5 = true;\n        S1_Yaw();\n        S1_Roll();\n        S1_Surge();\n    }\n\n    void S6()\n    {\n        flag_S5 = true;\n        S1_Pitch();\n        S1_Yaw();\n        S1_Roll();\n        S1_Surge();\n    }\n\n    public void Timer()\n    {\n        timer += Time.deltaTime;\n    }\n\n    void Refresh()\n    {\n        if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n            pm.recentering = true;\n    }\n\n    void Cycle1()\n    {\n        if (pm.timer >= 0.0f && pm.timer < 60.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 60.0f && pm.timer < 80.0f)\n        {\n            S1_Pitch();\n        }\n        else if (pm.timer >= 80.0f && pm.timer < 100.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S1_Yaw();\n        }\n        else if (pm.timer >= 100.0f && pm.timer < 120.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S1_Roll();\n        }\n        else if (pm.timer >= 120.0f && pm.timer < 143.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S1_Surge();\n        }\n        else if (pm.timer >= 143.0f && pm.timer < 155.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S1_Heave();\n        }\n        else if (pm.timer >= 155.0f && pm.timer < 175.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S1_Sway();\n        }\n        else if (pm.timer >= 175.0f && pm.timer < 235.0f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 235.0f && pm.timer < 248.5f)\n        {\n            S2_Pitch();\n        }\n        else if (pm.timer >= 248.5f && pm.timer < 270.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S2_Yaw();\n        }\n        else if (pm.timer >= 270.5f && pm.timer < 290.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S2_Roll();\n        }\n        else if (pm.timer >= 290.5f && pm.timer < 314.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S2_Surge();\n        }\n        else if (pm.timer >= 314.5f && pm.timer < 334.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S2_Heave();\n        }\n        else if (pm.timer >= 334.5f && pm.timer < 353.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S2_Sway();\n        }\n        else if (pm.timer >= 353.5f && pm.timer < 413.5f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 413.5f && pm.timer < 431.5f)\n        {\n            S3_Pitch();\n        }\n        else if (pm.timer >= 431.5f && pm.timer < 457.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S3_Yaw();\n        }\n        else if (pm.timer >= 457.9f && pm.timer < 477.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S3_Roll();\n        }\n        else if (pm.timer >= 477.9f && pm.timer < 497.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S3_Surge();\n        }\n        else if (pm.timer >= 497.9f && pm.timer < 517.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S3_Heave();\n        }\n        else if (pm.timer >= 517.9f && pm.timer < 537.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            if (pm.recentering == false)\n                S3_Sway();\n        }\n        else if (pm.timer >= 537.9f && pm.timer < 607.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 607.9f && pm.timer < 667.9f)\n        {\n            S4();\n        }\n        else if (pm.timer >= 667.9f && pm.timer < 727.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 727.9f && pm.timer < 787.9f)\n        {\n            S5();\n        }\n        else if (pm.timer >= 787.9f && pm.timer < 847.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n        }\n        else if (pm.timer >= 847.9f && pm.timer < 907.9f)\n        {\n            S6();\n        }\n        else if (pm.timer >= 907.9f)\n        {\n            if (pm.rotNow != Vector3.zero && tr.position != new Vector3(928.0f, 54.0f, 1020.0f))\n                pm.recentering = true;\n            FlagInit();\n            idx = 0;\n        }\n    }\n}\n" "PlayMenu.cs" nil nil nil "/home/multilab/analysis/csharp/PlayMenu.cs" nil nil)
                       ("CalQ.cs" "using MotionDevice.RollerCoaster;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Text;\nusing UnityEngine;\nusing UTJ.FrameCapturer;\n\n\n\npublic class CalQ : MonoBehaviour\n{\n	public float pitchDelta, yawDelta, rollDelta, surgeDelta, heaveDelta, swayDelta, tmpHeave; // to observe data\n	public int frameMax = 601; // 60 fps * 60 sec\n\n	#region inner_types\n	#endregion\n\n	#region fields\n	private Vector3 prevVector;\n	PlayManager playManager;\n	PlayMenu playMenu;\n	MovieRecorder mRecoder;\n	readonly string DATA_PATH = \"../analysis/data/raw/motion/motion_dist_raw.txt\";\n	readonly string META_PATH = \"../analysis/data/raw/motion/motion_dist_raw.meta\";\n	List<int[]> totalBins = new List<int[]>();\n	bool flag = false;\n	bool timerFlag = false;\n	int frame = 0;\n	int startVideoFrame;\n	int idx = 0;\n	int target = 60;\n	float pitchPrev, yawPrev, rollPrev;\n	float timer = 0.0f;\n\n	#endregion\n\n	const int PITCH = 0, YAW = 1, ROLL = 2, SURGE = 3, HEAVE = 4, SWAY = 5;\n	const float PITCH_MAX = 13.5f, YAW_MAX = 14.6f, ROLL_MAX = 5.6f, SURGE_MAX = 14.0f, HEAVE_MAX = 0.32f, SWAY_MAX = 9.0f;\n	readonly float[] PITCH_BIN = { - PITCH_MAX * 4 / 5, - PITCH_MAX * 1 / 5, PITCH_MAX * 1/5, PITCH_MAX * 4 / 5 };\n	readonly float[] YAW_BIN = { -YAW_MAX * 4 / 5, -YAW_MAX * 1 / 5, YAW_MAX * 1 / 5, YAW_MAX * 4 / 5 };\n	readonly float[] ROLL_BIN = { -ROLL_MAX * 4 / 5, -ROLL_MAX * 1 / 5, ROLL_MAX * 1 / 5, ROLL_MAX * 4 / 5 };\n	readonly float[] SURGE_BIN = { -SURGE_MAX * 4 / 5, -SURGE_MAX * 1 / 5, SURGE_MAX * 1 / 5, SURGE_MAX * 4 / 5 };\n	readonly float[] HEAVE_BIN = { -HEAVE_MAX * 4 / 5, -HEAVE_MAX * 1 / 5, HEAVE_MAX * 1 / 5, HEAVE_MAX * 4 / 5 };\n	readonly float[] SWAY_BIN = { -SWAY_MAX * 4 / 5, -SWAY_MAX * 1 / 5, SWAY_MAX * 1 / 5, SWAY_MAX * 4 / 5 };\n\n\n\n	void Start()\n	{\n		Application.targetFrameRate = target;\n		playManager = GameObject.Find(\"PlayManager\").GetComponent<PlayManager>();\n		playMenu = GameObject.Find(\"PlayManager\").GetComponent<PlayMenu>();\n		mRecoder = GameObject.Find(\"Fove Interface\").GetComponent<MovieRecorder>();\n		frame = 0;\n	}\n\n   void FixedUpdate()\n	{\n		if (!(Application.targetFrameRate == target))\n			Application.targetFrameRate = target;\n		if (playMenu.idx != 0 && idx == 0)\n		{\n			flag = true;\n			idx = playMenu.idx;\n			mRecoder.BeginRecording();\n			startVideoFrame = mRecoder.getFrame;\n		}\n\n		if (timerFlag == true) timer += Time.deltaTime;\n\n		if (mRecoder.getFrame - startVideoFrame == frameMax + 1)\n//			if (mRecoder.getFrame - startVideoFrame == 3601)\n			mRecoder.EndRecording();\n\n		if (flag == true)\n		{\n			if ((frame % 20) == 0)\n			{\n				prevVector = new Vector3(playManager.tr.position.x, playManager.posNow.y, playManager.tr.position.z);\n				pitchPrev = playManager.rotNow.x;\n				yawPrev = playManager.rotNow.y;\n				rollPrev = playManager.rotNow.z;\n\n			}\n			else if ((frame % 20) == 19)\n			{\n\n				pitchDelta = playManager.rotNow.x - pitchPrev;\n				yawDelta = playManager.rotNow.y - yawPrev;\n            rollDelta = playManager.rotNow.z - rollPrev;\n				surgeDelta = playManager.tr.position.x - prevVector.x;\n				heaveDelta = playManager.posNow.y - prevVector.y;\n				swayDelta = playManager.tr.position.z - prevVector.z;\n				totalBins.Add(ToCategory(pitchDelta, yawDelta, rollDelta, surgeDelta, heaveDelta, swayDelta));\n			}\n			frame++;\n		}\n\n		if ((frame > frameMax) && (flag == true)) Finish();\n	}\n\n	#region select_bin \n	int[] ToCategory(float pitchDelta, float yawDelta, float rollDelta, float surgeDelta, float heaveDelta, float swayDelta)\n	{\n		return new int[] { ToCategoryImpl(pitchDelta, 0), ToCategoryImpl(yawDelta, 1), ToCategoryImpl(rollDelta, 2),\n			ToCategoryImpl(surgeDelta, 3), ToCategoryImpl(heaveDelta, 4), ToCategoryImpl(swayDelta, 5) };\n	}\n\n	int ToCategoryImpl(float delta, int axis)\n	{\n 		switch (axis)\n		{\n			case PITCH:\n				if (delta <= PITCH_BIN[2] && delta >= PITCH_BIN[1] ) return 0; // low level motion\n				else if (delta <= PITCH_BIN[3] && delta > PITCH_BIN[2] ) return 1; // medium level motion\n				else if (delta < PITCH_BIN[1] && delta >= PITCH_BIN[0] ) return 2; // medium level motion\n				else if (delta > PITCH_BIN[3] ) return 3; // high level motion\n				else return 4; // high level motion\n			case YAW:\n				if (delta <= YAW_BIN[2] && delta >= YAW_BIN[1]) return 0; // low level motion\n				else if (delta <= YAW_BIN[3] && delta > YAW_BIN[2]) return 1; // medium level motion\n				else if (delta < YAW_BIN[1] && delta >= YAW_BIN[0]) return 2; // medium level motion\n				else if (delta > YAW_BIN[3]) return 3; // high level motion\n				else return 4; // high level motion\n			case ROLL:\n				if (delta <= ROLL_BIN[2] && delta >= ROLL_BIN[1]) return 0; // low level motion\n				else if (delta <= ROLL_BIN[3] && delta > ROLL_BIN[2]) return 1; // medium level motion\n				else if (delta < ROLL_BIN[1] && delta >= ROLL_BIN[0]) return 2; // medium level motion\n				else if (delta > ROLL_BIN[3]) return 3; // high level motion\n				else return 4; // high level motion\n			case SURGE:\n				if (delta <= SURGE_BIN[2] && delta >= SURGE_BIN[1]) return 0; // low level motion\n				else if (delta <= SURGE_BIN[3] && delta > SURGE_BIN[2]) return 1; // medium level motion\n				else if (delta < SURGE_BIN[1] && delta >= SURGE_BIN[0]) return 2; // medium level motion\n				else if (delta > SURGE_BIN[3]) return 3; // high level motion\n				else return 4; // high level motion\n			case HEAVE:\n				if (delta <= HEAVE_BIN[2] && delta >= HEAVE_BIN[1]) return 0; // low level motion\n				else if (delta <= HEAVE_BIN[3] && delta > HEAVE_BIN[2]) return 1; // medium level motion\n				else if (delta < HEAVE_BIN[1] && delta >= HEAVE_BIN[0]) return 2; // medium level motion\n				else if (delta > HEAVE_BIN[3]) return 3; // high level motion\n				else return 4; // high level motion\n			case SWAY:\n				if (delta <= SWAY_BIN[2] && delta >= SWAY_BIN[1]) return 0; // low level motion\n				else if (delta <= SWAY_BIN[3] && delta > SWAY_BIN[2]) return 1; // medium level motion\n				else if (delta < SWAY_BIN[1] && delta >= SWAY_BIN[0]) return 2; // medium level motion\n				else if (delta > SWAY_BIN[3]) return 3; // high level motion\n				else return 4; // high level motion\n			default:\n				return -1; // error occured\n		}\n	}\n\n	#endregion\n\n	void Write_File()\n	{\n		string dataPath = DATA_PATH;\n		string metaPath = META_PATH;\n\n		using (var writer = new StreamWriter(dataPath, true, Encoding.UTF8))\n		{\n			foreach (int[] bin in totalBins)\n				for (int i = 0; i < bin.Length; i++) writer.Write(string.Format(\"{0} \", bin[i]));\n		}\n\n		StreamWriter metaWriter = new StreamWriter(metaPath, true);\n		metaWriter.Write(idx + \" \");\n		metaWriter.Write(playManager.timer + \" \");\n		metaWriter.Write(frame );\n		metaWriter.Close();\n	}\n\n	void Finish()\n	{\n		Debug.Log(\"Good luck!\");\n		Write_File();\n		playMenu.idx = 0;\n		flag = false;\n	}\n}\n" "CalQ.cs" nil nil nil "/home/multilab/analysis/csharp/CalQ.cs" nil nil)))


;;; Do not edit! File generated at Wed Aug 28 18:24:14 2019
